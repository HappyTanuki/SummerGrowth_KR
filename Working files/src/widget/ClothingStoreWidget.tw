:: ClothingStoreWidget [widget nobr] {"position":"2500,1525","size":"100,100"}
<<widget "ClothingStoreWidget">>

<<set _storeClothes to $args[0].slice()>> /* keeps the shallow copy of original list */
<<set _isOnline to $args[0] == $onlineInventory>>
<<set _filteredStoreClothes to _storeClothes.slice()>>
<<set _range to 10>>

<<script>>
console.log(State.temporary.filteredStoreClothes);
<</script>>

<span id="outfitTable">
<table id="store">
    <tr>
        <td>
            착용 부위:<br>
            <<listbox "$shoppingSlot" autoselect>>
                <<optionsfrom ['-', '상의', '하의', '속옷', '외투', '브라', '신발']>>
            <</listbox>>
        </td>
        <td>
            옷 스타일로 필터링:<br>
            <<set _stylesCopy to [...setup.allStyles]>>
            <<set _stylesCopy.unshift('All styles')>>
            <<listbox "$shoppingStyle" autoselect>>
                <<optionsfrom _stylesCopy>>
            <</listbox>>
        </td>
        <td>
            보너스로 필터링:<br>
            <<set _bonusCopy to function () {
                var arr = ['-'];
                console.log("bonusCopy info:");
                for (var prop in setup.clothingBonuses) {
                    console.log(prop);
                    if (setup.clothingBonuses.hasOwnProperty(prop)) {
                        var innerObj = {};
                        innerObj[prop] = setup.clothingBonuses[prop];
                        console.log(Object.values(innerObj)[0]);
                        console.log(Object.values(innerObj)[0].hideInStores);
                        if(Object.values(innerObj)[0].hideInStores == false){
                            arr.push(Object.values(innerObj)[0].name);
                        }                       
                    }
                }  
                console.log(arr); 
                return arr;
            }>>
            <<listbox "$shoppingBonuses" autoselect>>
                <<optionsfrom _bonusCopy()>>
            <</listbox>>
        </td>
    </tr>
  </table>
</span>

<<timed 0s>>
<<script>>
const inputs = $('#listbox-shoppingslot, #listbox-shoppingstyle, #listbox-shoppingbonuses, #checkbox-shoppingaffordable');
const clothes = State.temporary.storeClothes;

inputs.on('change', function () {
    setup.setClothesTable(clothes);
});
setup.setClothesTable(clothes);
<</script>>
<</timed>>

<<liveblock>>
<span id="outfitTable">

<<set _rowDisplaySize to function (rowIndex) {
    const clothing = State.temporary.filteredStoreClothes[rowIndex];

    const sizes = {};
    for (let i = 0; i < setup.getAllSizeNames().slice(clothing.availableSizes[0], clothing.availableSizes[1]).length; i++) {
        sizes[setup.getReadableFitFromSize(i, clothing.slot, clothing.tolerance)] = i;
    }
    return sizes;
}>>

<table id="store">
  <tr>
    <th>이름</th>
    <th>가격</th>
	<th>사이즈</th>
    <th>추가 효과</th>
    <th>스타일</th>
    <th></th>
  </tr>    
    <<for _i to 0; _i < _filteredStoreClothes.length; _i ++>>
        <<capture _i>>
            <<set _rowDisplaySizes to _rowDisplaySize(_i)>>
            <tr @data-num="_i">
                <td>
                    <<print _filteredStoreClothes[_i].name>>                    
                </td>
                <td>$<<print setup.getPriceFromClothing(_filteredStoreClothes[_i])>></td>
                <td><<listbox "_filteredStoreClothes[_i].size" autoselect>>
                        <<optionsfrom _rowDisplaySizes>>
                    <</listbox>></td>
                <td><<print setup.getReadableBonusFromClothing(_filteredStoreClothes[_i])>></td>
                <td><<print  setup.getReadableArchetypesFromClothing(_filteredStoreClothes[_i])>></td>
                <td>
                    <<if setup.getPriceFromClothing(_filteredStoreClothes[_i]) <= $money>>
                        <<link '구입'>>
                            <<set $money -= setup.getPriceFromClothing(_filteredStoreClothes[_i])>>  
                            <<set _filteredStoreClothes[_i].id to Date.now()>>
                            <<if _isOnline == false>>                                    
                                <<set $wardrobe.push(_filteredStoreClothes[_i])>>
                                <<script>>
                                    console.log('User bought: ');
                                    console.log(State.temporary.filteredStoreClothes[State.temporary.i]);
                                    if (!Dialog.isOpen()) {
                                        new Wikifier(Dialog.setup('물품 구매함!'), '옷장에 <<print _filteredStoreClothes[_i].name>>가 추가됐습니다');
                                        Dialog.open();
                                        
                                        $('.macro-live').trigger(':liveupdateinternal'); /* update to refresh money */
                                    }
                                <</script>>
                            <<else>>
                                <<set $storeOnlineBoughtDelay.push(_filteredStoreClothes[_i])>>
                                <<script>>
                                    console.log('User bought: ');
                                    console.log(State.temporary.filteredStoreClothes[State.temporary.i]);
                                    if (!Dialog.isOpen()) {
                                        new Wikifier(Dialog.setup('물품 구매함!'), '곧 <<print _filteredStoreClothes[_i].name>> 가 배달됩니다.');
                                        Dialog.open();
                                        
                                        $('.macro-live').trigger(':liveupdateinternal'); /* update to refresh money */
                                    }
                                <</script>>
                            <</if>>                                                              
                        <</link>>
                    <<else>>
                        돈이 모자랍니다.
                    <</if>>
                </td>
            </tr>   
        <</capture>>
    <</for>>
  </table>
</span>

<<timed 0s>>
<<script>>
const inputs = $('[name^=\'listbox--filteredstoreclothes-isize\']');

inputs.on('change', function () {
    const mod = $(this).children(':selected').val();
    
    const rowIndex = Number($(this).closest('tr').attr('data-num'));

    State.temporary.filteredStoreClothes[rowIndex].size = parseInt(mod);
    $('.macro-live').trigger(':liveupdateinternal');
});
<</script>>
<</timed>>

<</liveblock>>
<</widget>>


